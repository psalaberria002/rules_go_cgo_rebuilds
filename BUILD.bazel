load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")

gazelle_binary(
    name = "gazelle_bin",
    languages = DEFAULT_LANGUAGES + [
        "@rules_python_gazelle_plugin//python",
    ],
)

gazelle(
    name = "gazelle",
    gazelle = "//:gazelle_bin",
)

# Gazelle check: exits with 1 if gazelle wants to make changes.
#
# Usage:
#   bazel run gazelle_check
gazelle(
    name = "gazelle_check",
    command = "update",
    extra_args = ["-mode=diff"],
    gazelle = "//:gazelle_bin",
)

PLATFORMS = {
    "linux_amd64": {
        "os": "linux",
        "cpu": "x86_64",
        "exec_properties": {
            "container-image": "docker://europe-docker.pkg.dev/cognitedata/cdf/infrastructure/services/bazel/buildbarn/worker-base@sha256:f3435c1e8ea3e441d9e50bf4b61049dc3d682e7e95e79c0f5fe669e4d97d8820",
            "OSFamily": "Linux",
        },
    },
    "linux_arm64": {
        "os": "linux",
        "cpu": "arm64",
        "exec_properties": {},
    },
    "darwin_amd64": {
        "os": "osx",
        "cpu": "x86_64",
        "exec_properties": {},
    },
    "darwin_arm64": {
        "os": "osx",
        "cpu": "arm64",
        "exec_properties": {},
    },
}

[
    platform(
        name = p,
        constraint_values = [
            "@platforms//os:%s" % PLATFORMS[p]["os"],
            "@platforms//cpu:%s" % PLATFORMS[p]["cpu"],
            #"@io_bazel_rules_go//go/toolchain:cgo_on",
        ],
        exec_properties = PLATFORMS[p]["exec_properties"],
        visibility = ["//visibility:public"],
    )
    for p in PLATFORMS
]
